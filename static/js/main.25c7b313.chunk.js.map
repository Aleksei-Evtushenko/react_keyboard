{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlePress","event","setState","key","document","addEventListener","this","removeEventListener","buttonPressedText","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IAAMQ,EAAoBF,KAAKR,MAAMC,WAAX,mCACMO,KAAKR,MAAMC,WADjB,KAEtB,0BAEJ,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGD,UAzBX,GAAyBE,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.25c7b313.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlePress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlePress);\n  }\n\n  handlePress = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const buttonPressedText = this.state.pressedKey\n      ? `The last pressed key is [${this.state.pressedKey}]`\n      : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {buttonPressedText}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}